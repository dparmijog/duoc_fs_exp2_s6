{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.sesionSubject = new BehaviorSubject(this.getSesion());\n    this.sesion$ = this.sesionSubject.asObservable();\n    const usuariosStr = localStorage.getItem('usuarios');\n    if (!usuariosStr) {\n      const admin = {\n        nombre: 'Admin',\n        email: 'admin@duoc.cl',\n        password: 'admin',\n        tipo: 'admin'\n      };\n      localStorage.setItem('usuarios', JSON.stringify([admin]));\n    }\n  }\n  getSesion() {\n    const sesion = localStorage.getItem('sesion');\n    return sesion ? JSON.parse(sesion) : null;\n  }\n  estaLogueado() {\n    const sesion = this.getSesion();\n    return sesion?.logueado || false;\n  }\n  esAdmin() {\n    const sesion = this.getSesion();\n    return sesion?.tipo === 'admin';\n  }\n  cerrarSesion() {\n    localStorage.removeItem('sesion');\n    this.sesionSubject.next(null); // 🔁 actualiza para los suscriptores\n  }\n\n  iniciarSesion(sesionData) {\n    localStorage.setItem('sesion', JSON.stringify(sesionData));\n    this.sesionSubject.next(sesionData); // 🔁 notifica cambios\n  }\n\n  addUser(user) {\n    const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n    const existe = usuarios.some(u => u.email === user.email);\n    if (existe) return false;\n    usuarios.push(user);\n    localStorage.setItem('usuarios', JSON.stringify(usuarios));\n    return true;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","sesionSubject","getSesion","sesion$","asObservable","usuariosStr","localStorage","getItem","admin","nombre","email","password","tipo","setItem","JSON","stringify","sesion","parse","estaLogueado","logueado","esAdmin","cerrarSesion","removeItem","next","iniciarSesion","sesionData","addUser","user","usuarios","existe","some","u","push","factory","ɵfac","providedIn"],"sources":["/home/rmji/Projects/duoc/duoc_02/fs_exp2_s6/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private sesionSubject = new BehaviorSubject<any>(this.getSesion());\n  sesion$ = this.sesionSubject.asObservable();\n\n  constructor() {\n  const usuariosStr = localStorage.getItem('usuarios');\n  if (!usuariosStr) {\n    const admin = {\n      nombre: 'Admin',\n      email: 'admin@duoc.cl',\n      password: 'admin',\n      tipo: 'admin'\n    };\n    localStorage.setItem('usuarios', JSON.stringify([admin]));\n  }\n}\n\n\n  getSesion() {\n    const sesion = localStorage.getItem('sesion');\n    return sesion ? JSON.parse(sesion) : null;\n  }\n\n  estaLogueado(): boolean {\n    const sesion = this.getSesion();\n    return sesion?.logueado || false;\n  }\n\n  esAdmin(): boolean {\n    const sesion = this.getSesion();\n    return sesion?.tipo === 'admin';\n  }\n\n  cerrarSesion(): void {\n    localStorage.removeItem('sesion');\n    this.sesionSubject.next(null); // 🔁 actualiza para los suscriptores\n  }\n\n  iniciarSesion(sesionData: any): void {\n    localStorage.setItem('sesion', JSON.stringify(sesionData));\n    this.sesionSubject.next(sesionData); // 🔁 notifica cambios\n  }\n\n  addUser(user: any): boolean {\n  const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n  const existe = usuarios.some((u: any) => u.email === user.email);\n  if (existe) return false;\n  usuarios.push(user);\n  localStorage.setItem('usuarios', JSON.stringify(usuarios));\n  return true;\n}\n\n}\n\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAItBC,YAAA;IAHQ,KAAAC,aAAa,GAAG,IAAIH,eAAe,CAAM,IAAI,CAACI,SAAS,EAAE,CAAC;IAClE,KAAAC,OAAO,GAAG,IAAI,CAACF,aAAa,CAACG,YAAY,EAAE;IAG3C,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACpD,IAAI,CAACF,WAAW,EAAE;MAChB,MAAMG,KAAK,GAAG;QACZC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,eAAe;QACtBC,QAAQ,EAAE,OAAO;QACjBC,IAAI,EAAE;OACP;MACDN,YAAY,CAACO,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC,CAACP,KAAK,CAAC,CAAC,CAAC;;EAE7D;EAGEN,SAASA,CAAA;IACP,MAAMc,MAAM,GAAGV,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,OAAOS,MAAM,GAAGF,IAAI,CAACG,KAAK,CAACD,MAAM,CAAC,GAAG,IAAI;EAC3C;EAEAE,YAAYA,CAAA;IACV,MAAMF,MAAM,GAAG,IAAI,CAACd,SAAS,EAAE;IAC/B,OAAOc,MAAM,EAAEG,QAAQ,IAAI,KAAK;EAClC;EAEAC,OAAOA,CAAA;IACL,MAAMJ,MAAM,GAAG,IAAI,CAACd,SAAS,EAAE;IAC/B,OAAOc,MAAM,EAAEJ,IAAI,KAAK,OAAO;EACjC;EAEAS,YAAYA,CAAA;IACVf,YAAY,CAACgB,UAAU,CAAC,QAAQ,CAAC;IACjC,IAAI,CAACrB,aAAa,CAACsB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EACjC;;EAEAC,aAAaA,CAACC,UAAe;IAC3BnB,YAAY,CAACO,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACU,UAAU,CAAC,CAAC;IAC1D,IAAI,CAACxB,aAAa,CAACsB,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC;EACvC;;EAEAC,OAAOA,CAACC,IAAS;IACjB,MAAMC,QAAQ,GAAGd,IAAI,CAACG,KAAK,CAACX,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IACrE,MAAMsB,MAAM,GAAGD,QAAQ,CAACE,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAACrB,KAAK,KAAKiB,IAAI,CAACjB,KAAK,CAAC;IAChE,IAAImB,MAAM,EAAE,OAAO,KAAK;IACxBD,QAAQ,CAACI,IAAI,CAACL,IAAI,CAAC;IACnBrB,YAAY,CAACO,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACa,QAAQ,CAAC,CAAC;IAC1D,OAAO,IAAI;EACb;;;uBAlDa7B,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAkC,OAAA,EAAXlC,WAAW,CAAAmC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}