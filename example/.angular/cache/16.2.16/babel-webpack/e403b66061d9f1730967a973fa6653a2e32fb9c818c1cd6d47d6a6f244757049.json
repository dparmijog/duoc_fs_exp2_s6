{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Usuario o contrase\\u00F1a incorrectos. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, router, auth) {\n    this.fb = fb;\n    this.router = router;\n    this.auth = auth;\n    this.error = false;\n  }\n  ngOnInit() {\n    // Creamos el formulario con dos campos obligatorios\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  // Método para acceder fácilmente a los controles desde la vista\n  get f() {\n    return this.loginForm.controls;\n  }\n  login() {\n    this.error = false;\n    if (this.loginForm.invalid) {\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n    const {\n      email,\n      password\n    } = this.loginForm.value;\n    const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n    const usuario = usuarios.find(u => u.email === email && u.password === password);\n    if (usuario) {\n      localStorage.setItem('sesion', JSON.stringify({\n        logueado: true,\n        usuario: usuario.usuario,\n        tipo: usuario.tipo || 'usuario'\n      }));\n      window.location.href = usuario.tipo === 'admin' ? '/admin' : '/perfil';\n    } else {\n      this.error = true;\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 25,\n      vars: 6,\n      consts: [[1, \"container\", \"my-5\"], [1, \"text-center\", \"mb-4\"], [\"novalidate\", \"\", 1, \"mx-auto\", 2, \"max-width\", \"500px\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"invalid-feedback\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/registro\", 1, \"btn\", \"btn-outline-secondary\"], [1, \"text-center\", \"mt-3\"], [\"routerLink\", \"/recuperar\"], [\"class\", \"alert alert-danger mt-3 text-center\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"mt-3\", \"text-center\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"main\", 0)(1, \"h1\", 1);\n          i0.ɵɵtext(2, \"Iniciar Sesi\\u00F3n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Correo electr\\u00F3nico\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵelementStart(8, \"div\", 6);\n          i0.ɵɵtext(9, \"Ingresa un correo v\\u00E1lido.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 7);\n          i0.ɵɵtext(12, \"Contrase\\u00F1a\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 8);\n          i0.ɵɵelementStart(14, \"div\", 6);\n          i0.ɵɵtext(15, \"Contrase\\u00F1a requerida.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 9)(17, \"button\", 10);\n          i0.ɵɵtext(18, \"Ingresar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"a\", 11);\n          i0.ɵɵtext(20, \"Registrarse\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 12)(22, \"a\", 13);\n          i0.ɵɵtext(23, \"\\u00BFOlvidaste tu contrase\\u00F1a?\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(24, LoginComponent_div_24_Template, 2, 0, \"div\", 14);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"email\"].invalid && ctx.f[\"email\"].touched);\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"password\"].invalid && ctx.f[\"password\"].touched);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n        }\n      },\n      dependencies: [i4.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","router","auth","error","ngOnInit","loginForm","group","email","required","password","f","controls","login","invalid","markAllAsTouched","value","usuarios","JSON","parse","localStorage","getItem","usuario","find","u","setItem","stringify","logueado","tipo","window","location","href","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_24_Template","ɵɵadvance","ɵɵproperty","ɵɵclassProp","touched"],"sources":["/home/rmji/Projects/duoc/duoc_02/fs_exp2_s6/src/app/login/login.component.ts","/home/rmji/Projects/duoc/duoc_02/fs_exp2_s6/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm!: FormGroup; // Formulario reactivo\n  error: boolean = false;\n\n  constructor(private fb: FormBuilder, private router: Router, private auth: AuthService) {}\n\n  ngOnInit(): void {\n    // Creamos el formulario con dos campos obligatorios\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  // Método para acceder fácilmente a los controles desde la vista\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  login() {\n    this.error = false;\n\n    if (this.loginForm.invalid) {\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n\n    const { email, password } = this.loginForm.value;\n\n    const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n\n    const usuario = usuarios.find((u: any) =>\n      u.email === email && u.password === password\n    );\n\n    if (usuario) {\n      localStorage.setItem('sesion', JSON.stringify({\n        logueado: true,\n        usuario: usuario.usuario,\n        tipo: usuario.tipo || 'usuario'\n      }));\n\n      window.location.href = usuario.tipo === 'admin' ? '/admin' : '/perfil';\n    } else {\n      this.error = true;\n    }\n  }\n}\n","<main class=\"container my-5\">\n  <h1 class=\"text-center mb-4\">Iniciar Sesión</h1>\n\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" novalidate class=\"mx-auto\" style=\"max-width: 500px;\">\n\n    <!-- Email -->\n    <div class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Correo electrónico</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        formControlName=\"email\"\n        class=\"form-control\"\n        [class.is-invalid]=\"f['email'].invalid && f['email'].touched\"\n      />\n      <div class=\"invalid-feedback\">Ingresa un correo válido.</div>\n    </div>\n\n    <!-- Contraseña -->\n    <div class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Contraseña</label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        formControlName=\"password\"\n        class=\"form-control\"\n        [class.is-invalid]=\"f['password'].invalid && f['password'].touched\"\n      />\n      <div class=\"invalid-feedback\">Contraseña requerida.</div>\n    </div>\n\n    <!-- Botones -->\n    <div class=\"d-flex justify-content-between align-items-center\">\n      <button type=\"submit\" class=\"btn btn-primary\">Ingresar</button>\n      <a routerLink=\"/registro\" class=\"btn btn-outline-secondary\">Registrarse</a>\n    </div>\n\n    <div class=\"text-center mt-3\">\n      <a routerLink=\"/recuperar\">¿Olvidaste tu contraseña?</a>\n    </div>\n\n    <!-- Error de autenticación -->\n    <div *ngIf=\"error\" class=\"alert alert-danger mt-3 text-center\">\n      Usuario o contraseña incorrectos.\n    </div>\n  </form>\n</main>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}